datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                String     @id @default(uuid())
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @default(now())
  username          String     @unique
  avatarUrl         String
  email             String
  githubId          String     @unique
  githubAccessToken String
  App               App[]
  Database          Database[]
  AppBuild          AppBuild[]
}

model App {
  id                  String     @id @default(uuid())
  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @default(now())
  name                String
  githubRepoId        String?
  githubWebhooksToken String?
  githubBranch        String?
  appBuild            AppBuild[]
  databases           Database[] @relation(references: [id])
  User                User?      @relation(fields: [userId], references: [id])
  userId              String?
}

model AppBuild {
  id        String         @id @default(uuid())
  createdAt DateTime       @default(now())
  updatedAt DateTime       @default(now())
  status    AppBuildStatus
  app       App            @relation(fields: [appId], references: [id])
  appId     String
  User      User?          @relation(fields: [userId], references: [id])
  userId    String?
}

enum AppBuildStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  ERRORED
}

model Database {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  name      String
  type      DbTypes
  version   String?
  apps      App[]    @relation(references: [id])
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

enum DbTypes {
  REDIS
  POSTGRESQL
  MONGODB
  MYSQL
}
